# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import hello_pb2 as hello__pb2


class HelloServiceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SayHello = channel.unary_unary(
                '/hello.HelloService/SayHello',
                request_serializer=hello__pb2.HelloReq.SerializeToString,
                response_deserializer=hello__pb2.HelloResp.FromString,
                )
        self.SayHelloStrict = channel.unary_unary(
                '/hello.HelloService/SayHelloStrict',
                request_serializer=hello__pb2.HelloReq.SerializeToString,
                response_deserializer=hello__pb2.HelloResp.FromString,
                )
        self.SayHelloAdvanced = channel.unary_unary(
                '/hello.HelloService/SayHelloAdvanced',
                request_serializer=hello__pb2.HelloReq.SerializeToString,
                response_deserializer=hello__pb2.HelloResp.FromString,
                )


class HelloServiceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def SayHello(self, request, context):
        """This thing just says Hello to anyone
        SayHello('Euler') -> Hello, Euler!
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SayHelloStrict(self, request, context):
        """Strict Version responds only to requests which have `Name` length
        less than 10 characters
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SayHelloAdvanced(self, request, context):
        """Same like previous one, but returns an advanced error, an instance of Error message defined below
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HelloServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SayHello': grpc.unary_unary_rpc_method_handler(
                    servicer.SayHello,
                    request_deserializer=hello__pb2.HelloReq.FromString,
                    response_serializer=hello__pb2.HelloResp.SerializeToString,
            ),
            'SayHelloStrict': grpc.unary_unary_rpc_method_handler(
                    servicer.SayHelloStrict,
                    request_deserializer=hello__pb2.HelloReq.FromString,
                    response_serializer=hello__pb2.HelloResp.SerializeToString,
            ),
            'SayHelloAdvanced': grpc.unary_unary_rpc_method_handler(
                    servicer.SayHelloAdvanced,
                    request_deserializer=hello__pb2.HelloReq.FromString,
                    response_serializer=hello__pb2.HelloResp.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'hello.HelloService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class HelloService(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def SayHello(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hello.HelloService/SayHello',
            hello__pb2.HelloReq.SerializeToString,
            hello__pb2.HelloResp.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SayHelloStrict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hello.HelloService/SayHelloStrict',
            hello__pb2.HelloReq.SerializeToString,
            hello__pb2.HelloResp.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SayHelloAdvanced(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hello.HelloService/SayHelloAdvanced',
            hello__pb2.HelloReq.SerializeToString,
            hello__pb2.HelloResp.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
